FETCH_BASEDIR = '%s/fetch'%(MANIFEST_TOPDIR)
FETCH_SUBDIR = 'tasktest'

fetch = Task()
fetch.mount('%s/%s'%(FETCH_BASEDIR, FETCH_SUBDIR), '/xd/fetch')
#fetch.wd('/xd/fetc')
def do_fetch():
    with open('/xd/fetch/hello.c', 'w') as f:
        f.write("""#include <stdio.h>
int main(int argc, char **argv)
{
        printf("Hello world.\\n");
        return 0;
}
""")
fetch = do_fetch

unpack = Task()
unpack.after('fetch')
unpack.mount('%s/%s'%(FETCH_BASEDIR, FETCH_SUBDIR), '/xd/fetch', ro=True)
#unpack.wd('/xd/src')
def do_unpack():
    import shutil, os
    os.mkdir('/xd/src') # FIXME: should be created automatically
    shutil.copy('/xd/fetch/hello.c', '/xd/src/')
unpack = do_unpack

configure = Task()
configure.after('unpack')
#configure.wd('/xd/src')
def do_configure():
    print('do_configure in %s:%s:%s'%(RECIPE_TYPE, RECIPE_NAME, TASK))
configure = do_configure

compile = Task()
compile.after(['configure', 'unpack'])
#compile.wd = '/xd/src'
def do_compile():
    print('do_compile in %s:%s:%s'%(RECIPE_TYPE, RECIPE_NAME, TASK))
    from sh import gcc
    import os
    os.chdir('/xd/src') # drop when .wd() is implemented
    print(gcc('hello.c', '-o', 'hello'))
compile = do_compile

install = Task()
install.after('compile')
#install.wd('/xd/src')
#install.dir('/xd/install')

package = Task()
package.after('install')
package.mount('%s/%s/%s'%(PACKAGE_BASEDIR, PACKAGE_SUBDIR, 'SHA1SIGNATURE'),
              '/xd/package')

all = Task()
all.after('package')

FOO = 'foo "bar"'
FOO.filter(TASK=='compile')
FOO.env = True

BAR = 'bar'
BAR.filter(TASK=='compile')

#PATH = "$PATH:more"
#PATH.env = True
